import React, { useEffect, useState } from "react";
import Style from "@/styles/intro.module.scss";
import { useRouter } from "next/router";

const Intro3 = () => {
  const [first, setFirst] = useState(true);
  const [second, setSecond] = useState(false);
  const [rotate, setRotate] = useState([90, 90, 270, 180]);

  const router = useRouter();

  function rotateSVG(quadrant: number) {
    let arr = [...rotate];
    if (arr[quadrant] >= 270) arr[quadrant] = 0;
    else arr[quadrant] += 90;
    setRotate(arr);

    const result = arr.filter((value) => value === 0);

    if (result.length === 4) {
      console.log("correct!");
      setFirst(false);
      setSecond(true);
    }
  }
  function skip() {
    setRotate([0, 0, 0, 0]);
    setFirst(false);
    setSecond(true);
  }
  function randomRotate() {
    const random = [90, 180, 270];
    let arr = [0, 0, 0, 0];
    for (let i = 0; i < 4; i++) {
      arr[i] = random[Math.floor(Math.random() * 3)];
    }
    setRotate(arr);
  }
  useEffect(() => {
    randomRotate();
  }, []);

  return (
    <main className={Style.intro_main}>
      <section className={first ? Style.intro_first : `${Style.intro_first} ${Style.intro_first_half}`}>
        <h1 className={second ? "" : `${Style.head_on}`}>
          {"Click on a piece to rotate it"}
          <br />
          {"클릭해서 퍼즐을 맞춰주세요"}
          <p onClick={skip}>{"Skip"}</p>
        </h1>
        <article className={Style.intro_puzzle}>
          <div
            className={rotate[0] === 0 ? `${Style.intro_puzzle_piece} ${Style.intro_puzzle_piece_color}` : Style.intro_puzzle_piece}
            onClick={() => rotateSVG(0)}
          >
            <svg viewBox="0 0 366 366" width="100%" fill="#000000" style={{ rotate: `${rotate[0]}deg` }} className={second ? Style.off : ""}>
              <path d="M181.02 366.88C189.673 339.348 185.832 309.193 192 281C194.108 271.365 198.068 260.423 206.406 255.156C213.076 250.944 222.135 256.385 230 257C230.5 255.5 230.5 255.5 231 254C237.375 256.208 243.427 259.813 250.125 260.625C256.447 261.392 262.759 258.47 269.125 258.625C277.75 258.835 286.974 261.165 295 258C296 260.5 296 260.5 297 263C299 259.5 299 259.5 301 256C301.5 258.5 301.5 258.5 302 261C305.5 260 305.5 260 309 259C309 261 309 261 309 263C313.506 259.313 316.893 258 323 258C323 260.5 323 260.5 323 263C327.72 257.415 324.983 258.27 330 258C330 260 330 260 330 262C334.494 261.401 340.4 261.714 343 258C347.985 260.895 345.663 261.123 350 258C351 260.5 351 260.5 352 263C354.016 262.594 354.016 262.594 356.031 262.188C357.516 265.094 357.516 265.094 359 268C363.69 264.753 361.059 265.186 367 268C367 136 367 136 367 4C347.833 4.33333 328.476 2.28479 309.5 5C301.752 6.1086 295.857 12.9529 288.375 15.25C276.712 18.8307 263.758 17.7989 252.5 22.5C244.285 25.9304 238.793 33.8949 231.5 39C216.622 49.4145 196.258 57.8727 185.781 74.3125C175.505 90.4371 167.139 107.76 159.344 125.219C150.648 144.694 151.593 167.241 149.875 188.5C146.673 228.13 151.951 273.978 162.5 312C165.607 323.198 172.909 332.864 176.625 343.875C179.121 351.272 179.555 359.212 181.02 366.88ZM266 292C261.07 288.713 255.128 292.596 250 294C250.5 292 250.5 292 251 290C249.506 290.064 248.521 291.956 247.031 292.094C244.341 292.342 241.677 291.365 239 291C238.5 293.5 238.5 293.5 238 296C236 295 236 295 234 294C235.5 291.5 235.5 291.5 237 289C228.779 296.815 225.91 297.196 219 303C222 303 222 303 225 303C224.5 304 224.5 304 224 305C227 304 227 304 230 303C227 305 227 305 224 307C228.116 308.323 227.184 306.941 228 310C236.386 303.711 249.714 308.558 258.75 309.125C262.273 309.346 265.723 307.616 269.25 307.75C279.255 308.131 289.242 308.958 299.25 309.25C304.542 309.404 303.654 310.016 305 307C307.478 309.891 305.733 308.707 311 309C311 310.5 311 310.5 311 312C315.374 309.901 313.047 310.083 318 312C318.5 311 318.5 311 319 310C315.231 308.744 316.588 307.434 317 303C321.991 307.721 319.693 306.497 323 308C323.5 306 323.5 306 324 304C327.447 310.894 324.764 310 330 310C328.501 307.677 327.949 303.126 326 302C326 303.5 326 303.5 326 305C322.052 301.434 314.112 298.352 311 295C306.415 297.012 305.706 296.221 301 294C302 293 302 293 303 292C292.225 291.366 275.297 282.703 266 292ZM235 351C241.463 351 251.38 352.314 257.188 347.906C263.383 343.204 265.371 340.241 273 338C270.508 360.429 302.089 364.316 303 342C308.259 347.412 311.603 350.174 304 355C308.432 357.955 312.356 356.353 318 356C306.487 329.685 288.315 326.964 260.5 331.5C249.937 333.223 236.426 339.592 235 351ZM162 367C165.476 355.181 167.832 350.499 157 344C160.602 352.105 161.254 357.856 162 367Z" />
            </svg>
          </div>
          <div
            className={rotate[1] === 0 ? `${Style.intro_puzzle_piece} ${Style.intro_puzzle_piece_color}` : Style.intro_puzzle_piece}
            onClick={() => rotateSVG(1)}
          >
            <svg viewBox="0 0 366 366" width="100%" fill="#000000" style={{ rotate: `${rotate[1]}deg` }} className={second ? Style.off : ""}>
              <path d="M-0.52706 2.5C-8.45187 89.3424-5.34096 176.818-5.67646 264C-2.93011 263-0.360388 260.763 2.56258 261C4.49783 261.157 5.30893 263.667 6.6821 265C11.1519 258.832 16.1006 257.188 23.1602 260C23.6751 258 23.6751 258 24.1901 256C25.2199 256.5 25.2199 256.5 26.2498 257C26.7648 256 26.7648 256 27.2797 255C30.1106 256.374 31.5815 259.785 34.4889 261C40.4143 263.475 52.9097 262.745 58.3048 261.5C59.3485 261.259 59.1753 259.157 60.2358 259C64.9991 258.294 70.0136 259.259 74.6542 258C73.1093 256.5 73.1093 256.5 71.5645 255C78.7737 254 78.7737 254 85.9828 253C85.9828 250.5 85.9828 250.5 85.9828 248C92.0154 251.514 91.1322 249.056 91.1322 254C93.7069 252.5 93.7069 252.5 96.2816 251C96.2816 253 96.2816 253 96.2816 255C104.412 250.594 107.73 255.538 116.879 253C116.364 251.5 116.364 251.5 115.849 250C117.909 252 117.909 252 119.969 254C120.999 252 120.999 252 122.029 250C128.796 251.174 137.746 253.701 142.626 249C142.626 250.5 142.626 250.5 142.626 252C148.651 251.331 163.43 263.4 165.284 269C166.828 268.5 166.828 268.5 168.373 268C174.345 298.956 177.218 330.415 180.474 361.75C181.099 367.759 182.089 366.506 186.911 367C187.511 348.361 188.205 332.817 200.557 317.625C203.122 314.47 204.633 316.604 207.509 318C205.337 315.337 200.238 311.335 201.265 306.812C205.539 287.998 211.892 269.649 215.748 250.75C219.593 231.904 223.414 212.91 224.341 193.719C225.567 168.327 215.667 137.045 205.224 114.781C197.208 97.694 187.947 81.0617 177.127 65.5C170.998 56.6854 162.635 49.5149 154.727 42.1562C150.242 37.9823 145.855 33.1532 140.052 31C114.964 21.6921 89.2931 13.4548 63.0036 8.125C42.1878 3.90492 20.6498 4.375-0.52706 2.5ZM117.909 288C113.433 284.523 113.701 284.426 108.64 288C104.711 284.494 100.945 285.744 96.2816 283C98.3414 285.5 98.3414 285.5 100.401 288C96.2816 286 96.2816 286 92.1621 284C92.6771 285.5 92.6771 285.5 93.192 287C87.0127 285.5 87.0127 285.5 80.8334 284C81.8633 285.5 81.8633 285.5 82.8932 287C77.6787 286.416 73.8685 284 68.4749 284C70.0197 285.5 70.0197 285.5 71.5645 287C62.9796 286.713 66.1989 288.048 61.2657 285C61.2657 286 61.2657 286 61.2657 287C55.2827 287.27 48.9561 288.502 42.9854 289.375C37.4895 290.178 42.9032 298.904 41.698 303C44.7877 300.5 44.7877 300.5 47.8773 298C47.3624 300.5 47.3624 300.5 46.8474 303C55.7857 304.193 59.132 307.147 66.8013 306C72.5669 305.137 78.3971 304.741 84.1806 304C86.7111 303.676 86.1131 303.906 87.0127 302C94.83 305.274 98.8687 303.516 107.61 302.75C115.163 302.088 127.293 305.469 134.387 307C132.842 304.5 132.842 304.5 131.298 302C139.655 303.566 137.092 305.273 140.566 301C142.626 302 142.626 302 144.686 303C143.141 301.5 143.141 301.5 141.596 300C142.626 299 142.626 299 143.656 298C133.396 292.16 123.343 289.889 114.819 282C116.364 285 116.364 285 117.909 288ZM41.698 359C57.8219 354.303 45.4246 352.815 54.314 346.875C54.7612 346.576 55.3167 346.349 55.8589 346.375C60.6748 346.609 62.0453 353.753 66.4151 355.875C82.0267 363.454 87.8172 350.432 89.0725 338C96.2816 342 96.2816 342 103.491 346C86.6665 363.204 139.593 359.148 130.075 347.688C114.243 328.626 67.9459 324.259 49.9371 342.5C45.4208 347.074 43.7908 353.209 41.698 359ZM202.359 362C203.904 361 203.904 361 205.449 360C204.419 363 204.419 363 203.389 366C207.4 362.106 211.988 339.792 208.152 334.125C201.655 324.525 200.646 348.578 200.814 350C201.288 354.005 201.844 358 202.359 362Z" />
            </svg>
          </div>
          <div
            className={rotate[2] === 0 ? `${Style.intro_puzzle_piece} ${Style.intro_puzzle_piece_color}` : Style.intro_puzzle_piece}
            onClick={() => rotateSVG(2)}
          >
            <svg viewBox="0 0 366 366" width="100%" fill="#000000" style={{ rotate: `${rotate[2]}deg` }} className={second ? Style.off : ""}>
              <path d="M344.281 88.4688C340.75 88.211 336.988 89.0059 333 91C337.154 96.5392 332.438 98.9125 327 100C330.993 102.396 349.74 95.4351 360 98C355.414 92.2678 350.167 88.8983 344.281 88.4688ZM302.75 155.094C300.447 154.968 298.213 155.015 296.125 155.375C292.685 155.968 286.182 162.19 293.375 162.438C306.08 162.874 318.803 162.761 331.5 163.375C343.352 163.948 355.167 165.125 367 166C367 162 367 162 367 158C365 159 365 159 363 160C362.192 157.078 329.769 158.329 324 159C324 158 324 158 324 157C317.26 157.396 309.659 155.472 302.75 155.094ZM235 194.5C249.523 214.995 258.335 226.473 277.875 241.875C282.416 245.455 289.678 256.576 297 254C301.548 262.337 337.03 282.838 346 273C344.5 272 344.5 272 343 271C344.5 271 344.5 271 346 271C346 269.5 346 269.5 346 268C347.5 269.5 347.5 269.5 349 271C349 268 349 268 349 265C353.52 267.583 350.644 266.731 358 265C357.5 263.5 357.5 263.5 357 262C361.297 264.772 360.748 262.968 361 266C359.5 266 359.5 266 358 266C359.556 271.771 360.857 270.834 367 271C367 266.5 367 266.5 367 262C364.5 263 364.5 263 362 264C362.5 262.5 362.5 262.5 363 261C356.471 261.138 359.874 260.409 353 264C353.5 262.5 353.5 262.5 354 261C351 262.5 351 262.5 348 264C348 263 348 263 348 262C301.864 259.837 267.595 224.324 235 194.5Z" />
            </svg>
          </div>
          <div
            className={rotate[3] === 0 ? `${Style.intro_puzzle_piece} ${Style.intro_puzzle_piece_color}` : Style.intro_puzzle_piece}
            onClick={() => rotateSVG(3)}
          >
            <svg viewBox="0 0 366 366" width="100%" fill="#000000" style={{ rotate: `${rotate[3]}deg` }} className={second ? Style.off : ""}>
              <path d="M181 1C181 10.1513 180.214 19.9559 182.094 29.0312C196.888 24.8077 197.377 2.24186 181 1ZM22 90C18.6435 89.7403 15.1846 90.6114 12 93C13.5 95 13.5 95 15 97C8.89573 94.5583-2.07043 101.336 6.625 101.906C9.74347 102.111 12.875 101.969 16 102C16 101 16 101 16 100C24.4474 101.689 27.7105 98.1532 36 99C32.8839 94.0142 27.5941 90.4328 22 90ZM12 152C3.91105 152.809-1.0774 156.192 1.59375 165.875C1.77968 166.549 2.80261 166.7 3.5 166.75C13.6666 167.474 27.9365 164.834 36 171C39.3569 165.965 64.0371 173.483 71.0938 160.875C74.0161 155.654 59.6929 156.944 53.75 156.25C39.9435 154.639 38.9491 149.775 28.5 155C27.8192 152.277 28.6146 153.307 26 152C25.2661 156.22 26.3315 154.37 22 157C20.668 154.336 20.0754 153.173 17 153C17 154 17 154 17 155C14 154.5 14 154.5 11 154C11.5 153 11.5 153 12 152ZM128 203C123.158 202.044 121.516 206.782 118 209.375C109.545 215.61 89.2029 229.043 84 237C82.5 236.5 82.5 236.5 81 236C81.5 237 81.5 237 82 238C78.6585 239.671 77.9793 239.621 74 239C76.1563 252.369 37.6665 262.387 28 263C28 262 28 262 28 261C26.5 262 26.5 262 25 263C23.0372 259.431 24.5671 260.37 20 261C20 260 20 260 20 259C10.7038 259.93 1.51171 258.975 1 271C4.5 270 4.5 270 8 269C8 270 8 270 8 271C17.1086 270.696 13.1687 271.657 20 269C18 271.5 18 271.5 16 274C21.5448 272.257 20.1153 274.131 21 269C23 269 23 269 25 269C25 270 25 270.444 25 271C25.0326 270.954 51.8532 265.623 56 266C55.5 265 55.5 265 55 264C56.5 264.5 56.5 264.5 58 265C58 264 58 264 58 263C62.6568 263.559 78.3449 258.978 79 253C80.5 253.5 80.5 253.5 82 254C83.3277 250.017 91.4506 247.093 94.5 243.625C105.94 230.615 115.303 216.142 128 203ZM25 271C25 271.278 25 271.5 25 272C26.5 271.5 26.5 271.5 28 271C26.5 271 26.5 271 25 271Z" />
            </svg>
          </div>
          <div className={second ? `${Style.image_wrap} ${Style.on}` : Style.image_wrap}>
            <img src="/img/profile/1x1_.png" alt="face image" />
          </div>
        </article>
      </section>
      <section className={second ? `${Style.intro_second} ${Style.intro_second_on}` : Style.intro_second}>
        <h1>{"PIH's Portfolio"}</h1>
        <div className={second ? `${Style.to_about} ${Style.on}` : Style.to_about}>
          <p
            onClick={() => {
              router.push("/about");
            }}
          >
            <svg viewBox="0 96 960 960" width="10vw">
              <path d="m480 896-42-43 247-247H160v-60h525L438 299l42-43 320 320-320 320Z" />
            </svg>
          </p>
        </div>
      </section>
    </main>
  );
};

export default Intro3;
